{"version":3,"sources":["components/Home/Home.js","components/Quiz/Quiz.js","App.js","reportWebVitals.js","index.js"],"names":["Home","useState","categoryKey","setCategoryKey","questionAmount","setQuestionAmount","categoryName","setCategoryName","categoryToggle","setCategoryToggle","questionsToggle","setQuestionsToggle","handleCategorySelect","eventKey","e","target","outerText","handleQuestionAmountSelect","id","Container","Dropdown","className","Toggle","variant","Menu","Item","onSelect","to","pathname","state","Button","Quiz","location","loading","setLoading","quizData","setQuizData","displayQuestion","setDisplayQuestion","correctAnswer","setCorrectAnswer","incorrectAnswers","setIncorrectAnswers","currentQuestion","setCurrentQuestion","isError","setIsError","score","setScore","gameOver","setGameOver","category","useWindowSize","width","height","prepareNextQuestion","button","question","correct_answer","incorrect_answers","useEffect","a","axios","get","data","results","fetchQuizData","type","color","timeout","atob","answers","concat","sort","map","answer","i","onClick","checkAnswers","displayAnswers","lessThan50Percent","Math","floor","random","length","between50And80","fullMarks","gameOverMessage","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e5c63053.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nconst Home = () => {\n\n  const [categoryKey, setCategoryKey] = useState('')\n  const [questionAmount, setQuestionAmount] = useState('')\n  const [categoryName, setCategoryName] = useState('')\n  const [categoryToggle, setCategoryToggle] = useState('Category?')\n  const [questionsToggle, setQuestionsToggle] = useState('Number of questions?')\n\n  function handleCategorySelect(eventKey, e) {\n    setCategoryKey(eventKey)\n    setCategoryName(e.target.outerText)\n    setCategoryToggle(e.target.outerText)\n  }\n  function handleQuestionAmountSelect(eventKey, e) {\n    setQuestionAmount(eventKey)\n    setQuestionsToggle(e.target.outerText)\n  }\n\n  return <div id=\"home\">\n    <Container id=\"homeContainer\">\n      <Container>\n        <h1>Quiz</h1>\n        <p>Choose from a number of categories and the number of questions you'd like to play with.</p>\n        <p>How many will you get right??</p>\n        <p>Good luck!</p>\n      </Container>\n      <Container id=\"selections\">\n        <Dropdown className=\"dropdown\">\n          <Dropdown.Toggle id=\"categoryDropdown\" variant=\"custom\">\n            {categoryToggle}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"27\">Animals</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"25\">Art</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"26\">Celebrities</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"16\">Entertainment: Board Games</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"10\">Entertainment: Books</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"32\">Entertainment: Cartoons & Animations</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"29\">Entertainment: Comics</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"11\">Entertainment: Film</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"31\">Entertainment: Japanese Anime & Manga</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"12\">Entertainment: Music</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"13\">Entertainment: Musicals & Theatres</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"14\">Entertainment: Television</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"15\">Entertainment: Video Games</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"9\">General Knowledge</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"22\">Geography</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"23\">History</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"20\">Mythology</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"24\">Politics</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"\">Random</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"17\">Science & Nature</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"18\">Science: Computers</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"19\">Science: Mathematics</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"30\">Science: Gadgets</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"21\">Sports</Dropdown.Item>\n            <Dropdown.Item onSelect={handleCategorySelect} eventKey=\"28\">Vehicles</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n        <Dropdown className=\"dropdown\">\n          <Dropdown.Toggle id=\"questionNumberDropdown\" variant=\"custom\">\n            {questionsToggle}\n          </Dropdown.Toggle>\n          <Dropdown.Menu>\n            <Dropdown.Item onSelect={handleQuestionAmountSelect} eventKey=\"10\">10 questions</Dropdown.Item>\n            <Dropdown.Item onSelect={handleQuestionAmountSelect} eventKey=\"15\">15 questions</Dropdown.Item>\n            <Dropdown.Item onSelect={handleQuestionAmountSelect} eventKey=\"20\">20 questions</Dropdown.Item>\n          </Dropdown.Menu>\n        </Dropdown>\n      </Container>\n      <Container>\n        {categoryKey && questionAmount &&\n          <div id=\"letsGo\">\n            <p id=\"playerChoice\">You've chosen {questionAmount} questions from the \"{categoryName}\" category!</p>\n            <Link to={{\n              pathname: \"/quiz/play\",\n              state: { categoryKey, questionAmount }\n            }}><Button variant=\"custom\">Let's Go!</Button></Link>\n          </div>\n        }\n      </Container>\n    </Container>\n  </div>\n}\n\nexport default Home","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport Loader from 'react-loader-spinner'\nimport { useWindowSize } from 'react-use'\nimport Confetti from 'react-confetti'\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\n\nconst Quiz = ({ location }) => {\n\n  const [loading, setLoading] = useState(true)\n  const [quizData, setQuizData] = useState([])\n  const [displayQuestion, setDisplayQuestion] = useState('')\n  const [correctAnswer, setCorrectAnswer] = useState([])\n  const [incorrectAnswers, setIncorrectAnswers] = useState([])\n  const [currentQuestion, setCurrentQuestion] = useState(0)\n  const [isError, setIsError] = useState(false)\n  const [score, setScore] = useState(0)\n  const [gameOver, setGameOver] = useState(false)\n\n  const category = location.state.categoryKey\n  const questionAmount = location.state.questionAmount\n  const { width, height } = useWindowSize()\n\n  useEffect(() => {\n    async function fetchQuizData() {\n      try {\n        const { data } = await axios.get(`https://opentdb.com/api.php?amount=${questionAmount}&${category ? 'category' : ''}=${category}&encode=base64`)\n        setQuizData(data.results)\n        setDisplayQuestion(data.results[0].question)\n        setCorrectAnswer(data.results[0].correct_answer)\n        setIncorrectAnswers(data.results[0].incorrect_answers)\n        setLoading(false)\n      } catch (error) {\n        setIsError(true)\n        setLoading(false)\n      }\n    }\n    fetchQuizData()\n    \n  }, [category, questionAmount])\n\n  function displayAnswers() {\n    const correct = [correctAnswer]\n    const incorrect = incorrectAnswers\n    const answers = correct.concat(incorrect)\n\n    return <div id=\"allAnswers\">\n      {answers.sort().map((answer, i) => {\n        return <Button variant=\"custom\" key={i} id={answer} className=\"answerButton\" onClick={() => checkAnswers(answer)}>{atob(answer)}</Button>\n      })}\n    </div>\n  }\n\n  function checkAnswers(answer) {\n    if (currentQuestion + 1 < questionAmount) {\n      if (answer === correctAnswer) {\n        setScore(score + 1) \n        prepareNextQuestion()\n      } else {\n        prepareNextQuestion()\n      }\n    } else {\n      setGameOver(true)\n    }\n  }\n\n  function prepareNextQuestion(button) {\n    setCurrentQuestion(currentQuestion + 1)\n    setDisplayQuestion(quizData[currentQuestion + 1].question)\n    setCorrectAnswer(quizData[currentQuestion + 1].correct_answer)\n    setIncorrectAnswers(quizData[currentQuestion + 1].incorrect_answers)\n  }\n\n  function gameOverMessage() {\n    if (score / questionAmount <= 0.5)  {\n      const lessThan50Percent = [\"Well tried!\", \"Better luck next time!\", \"You gave it a good go!\"]\n      const randomMessage = lessThan50Percent[Math.floor(Math.random() * lessThan50Percent.length)]\n      return randomMessage\n    } else if (score / questionAmount > 0.5 && score / questionAmount < 0.9) {\n      const between50And80 = [\"Well done, you got more than half right!\", \"Really good attempt - can you do better next time?!\", \"So close!\"]\n      const randomMessage = between50And80[Math.floor(Math.random() * between50And80.length)]\n      return randomMessage\n    } else {\n      const fullMarks = [\"Amazing work!\", \"Full marks - take a bow!!\", \"Quiz Pro!\"]\n      const randomMessage = fullMarks[Math.floor(Math.random() * fullMarks.length)]\n      return randomMessage\n    }\n  }\n\n  if (loading) {\n    return <div id=\"loader\">\n    <Loader\n      type=\"Circles\"\n      color=\" #40e0d0\"\n      height={200}\n      width={200}\n      timeout={3000}\n    />\n    </div>\n  }\n  \n  if (isError) {\n    return <>\n      <h2>There are not enough questions available for this category.</h2>\n      <Link to={{ pathname: \"/quiz/\" }}><Button variant=\"custom\">Choose again?</Button></Link>\n    </>\n  }\n\n  return <div id=\"quiz\">\n    {!gameOver &&\n      <Container id=\"quizContainer\">\n        <Container id=\"quizText\">\n        <h3>Question {currentQuestion + 1} of {questionAmount}</h3>\n        <h3>Score: {score}</h3>\n        </Container>\n        <h2 id=\"question\">{atob(displayQuestion)}</h2>\n        <div>\n          {displayAnswers()}\n        </div>\n      </Container>\n    }\n    {gameOver &&\n      <Container id=\"gameOver\">\n        <h2 className=\"gameOverText\">{gameOverMessage()}</h2>\n        <h2 className=\"gameOverText\">Your final score was {score} out of {questionAmount}!</h2>\n        <Link to={{ pathname: \"/quiz/\" }}><Button variant=\"custom\">Play again?</Button></Link>\n        <Confetti\n          width={width}\n          height={height}\n        />\n      </Container>\n    }\n  </div>\n}\n\nexport default Quiz","import React from 'react'\nimport { BrowserRouter, Switch, Route, Redirect } from 'react-router-dom'\n\nimport './App.scss';\n\nimport Home from './components/Home/Home'\nimport Quiz from './components/Quiz/Quiz'\n\n\nfunction App() {\n  return <>\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/quiz\" component={Home} />\n        <Route exact path=\"/quiz/play\" component={Quiz} />\n        <Redirect to=\"/quiz/not-found\"/>\n      </Switch>\n    </BrowserRouter>\n  </>\n\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}